# Generated by Django 3.2.15 on 2022-08-23 11:47

import ckeditor.fields
from django.db import migrations, models
import django.db.models.deletion
import simulator.validators


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='BaseComposite',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('path', models.CharField(max_length=255, unique=True)),
                ('depth', models.PositiveIntegerField()),
                ('numchild', models.PositiveIntegerField(default=0)),
                ('label', models.CharField(max_length=255, unique=True)),
                ('description', models.TextField(blank=True, default=None, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='BaseElement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('label', models.CharField(max_length=255, unique=True)),
                ('unit', models.CharField(choices=[(None, 'No unit'), ('W', 'Watt'), ('$', 'Dollar'), ('V', 'Volt'), ('%', 'Percentage'), ('Ah', 'Ampere hour')], default=None, max_length=30)),
                ('description', ckeditor.fields.RichTextField(blank=True, default=None, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Composite',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveIntegerField(blank=True, default=None, null=True)),
                ('additional_informations', models.JSONField(blank=True, default=None, null=True)),
                ('base_composition', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='simulator.basecomposite')),
            ],
        ),
        migrations.CreateModel(
            name='OperationAvailable',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('path', models.CharField(max_length=255, unique=True)),
                ('depth', models.PositiveIntegerField()),
                ('numchild', models.PositiveIntegerField(default=0)),
                ('label', models.CharField(max_length=255)),
                ('function_associate', models.CharField(max_length=255)),
                ('parameters', models.JSONField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Simulation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('title', models.CharField(max_length=255, unique=True)),
                ('description', ckeditor.fields.RichTextField()),
                ('type', models.CharField(choices=[('sas', 'Stand Alone Storage'), ('pvs', 'PV + Storage'), ('ws', 'Wind + Storage'), ('ma', 'Mobility Applications')], default='sas', max_length=100)),
                ('start', models.DateTimeField()),
                ('end', models.DateTimeField()),
                ('input_file', models.FileField(blank=True, null=True, upload_to='inputs/', validators=[simulator.validators.validate_file_extension])),
                ('root_composition', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='simulator.basecomposite')),
            ],
        ),
        migrations.CreateModel(
            name='Operation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('label', models.CharField(max_length=255, unique=True)),
                ('unit', models.CharField(choices=[(None, 'No unit'), ('W', 'Watt'), ('$', 'Dollar'), ('V', 'Volt'), ('%', 'Percentage'), ('Ah', 'Ampere hour')], default=None, max_length=30)),
                ('parameters', models.JSONField(blank=True, default=None, null=True)),
                ('operation_available', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='simulator.operationavailable')),
            ],
        ),
        migrations.CreateModel(
            name='Element',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(blank=True, default=None, null=True)),
                ('value', models.CharField(blank=True, default=None, max_length=255, null=True)),
                ('quantity', models.PositiveIntegerField(blank=True, default=None, null=True)),
                ('additional_informations', models.JSONField(blank=True, default=None, null=True)),
                ('base_element', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='simulator.baseelement')),
                ('composition', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='simulator.composite')),
                ('simulation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='simulator.simulation')),
            ],
        ),
        migrations.AddField(
            model_name='composite',
            name='simulation',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='simulator.simulation'),
        ),
        migrations.AddField(
            model_name='basecomposite',
            name='base_elements',
            field=models.ManyToManyField(blank=True, to='simulator.BaseElement'),
        ),
        migrations.AddField(
            model_name='basecomposite',
            name='operations_available',
            field=models.ManyToManyField(blank=True, to='simulator.OperationAvailable'),
        ),
    ]
